FROM ubuntu:20.04 AS ubuntu-tiros-foxy
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=foxy
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8

RUN echo . \
    && echo 'Etc/UTC' > /etc/timezone \
    && ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime \
    && apt update && apt upgrade -y \
    && apt install -y --no-install-recommends \
    tzdata \
    libdevil-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev \
    libgstreamer1.0-0 \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-good1.0-dev \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-libav \
    gstreamer1.0-tools \
    gir1.2-gst-rtsp-server-1.0 \
    ninja-build \
    dirmngr \
    gnupg2 \
    curl \
    build-essential \
    git \
    wget \
    vim \
    tmux \
    gdb \
    iputils-ping \
    usbutils \
    ncurses-dev \
    libyaml-cpp-dev \
    rsync \
    strace \
    sysstat \
    gdb \
    net-tools \
    dialog \
    chrony \
    nfs-common \
    corkscrew \
    v4l-utils \
    && echo .

RUN echo . \
    && echo "deb http://packages.ros.org/ros2/ubuntu focal main" > /etc/apt/sources.list.d/ros2-latest.list \
    && curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | apt-key add - \
    && apt update && apt upgrade -y \
    && apt install -y --no-install-recommends \
    unzip \
    libsm6 \
    libxext6 \
    libxrender1 \
    cmake \
    libprotobuf-dev \
    protobuf-compiler \
    libprotoc-dev \
    graphviz \
    swig \
    curl \
    vim \
    git \
    wget \
    gdb \
    nano \
    zip \
    pkg-config \
    libgtk-3-dev \
    libyaml-cpp-dev \
    autotools-dev \
    autoconf \
    automake \
    libtool \
    ros-foxy-ros-base=0.9.2-1* \
    ros-foxy-rmw-cyclonedds-cpp \
    ros-foxy-cv-bridge \
    ros-foxy-image-transport \
    ros-foxy-camera-info-manager \
    libeigen3-dev \
    python3-opencv \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    python3-pip \
    && python3 -m pip install --upgrade pip \
    && python3 -m pip install \
        rosbags \
        meson \
        configparser \
        argparse \
    && python3 -m pip install rosbags \
    && echo .

RUN rosdep init && \
    rosdep update --rosdistro ${ROS_DISTRO}

RUN colcon mixin add default \
      https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml && \
    colcon mixin update && \
    colcon metadata add default \
      https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
    colcon metadata update

WORKDIR /root/src
RUN echo . \
    && git clone https://git.ti.com/cgit/rpmsg/ti-rpmsg-char \
    && cd ti-rpmsg-char \
    && aclocal \
    && autoreconf -i \
    && ./configure --prefix=/usr/local \
    && make \
    && make install \
    && echo .

WORKDIR /opt
RUN echo . \
    && git clone https://github.com/TexasInstruments/edgeai-tidl-tools \
    && cd edgeai-tidl-tools \
    && /bin/bash -c "source ./setup.sh --skip_arm_gcc_download" \
    && echo .

COPY /tivision_apps.tar.xz /opt/
RUN tar xf /opt/tivision_apps.tar.xz --skip-old-files -C /

COPY /rtos_dlr.tar.xz /opt/
RUN tar xf /opt/rtos_dlr.tar.xz --skip-old-files -C /
RUN ln -s /usr/lib/python3.8/site-packages/libdlr.so /lib/

#WORKDIR /root/src
#RUN echo . \
    #&& rm -rf neo-ai-dlr \
    #&& git clone --branch tidl-j7-fixups https://github.com/jadonk/neo-ai-dlr \
    #&& cd neo-ai-dlr \
    #&& git submodule update --init --recursive \
    #&& mkdir -p build \
    #&& cd build \
    #&& cmake -DUSE_TIDL=ON -DUSE_TIDL_RT_PATH=/root/neo-ai-dlr .. \
    #&& make \
    #&& make install \
    #&& echo .

WORKDIR /root/src
RUN echo . \
    && git clone --branch main https://github.com/TexasInstruments/edgeai-tiovx-modules.git \
    && cd edgeai-tiovx-modules \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j1 \
    && make install \
    && echo .

WORKDIR /root/src
RUN echo . \
    && git clone --branch fix/pkgconfig-imaging-sdk-update https://github.com/TexasInstruments/edgeai-gst-plugins.git \
    && cd edgeai-gst-plugins \
    && meson build --prefix=/usr -Dpkg_config_path=pkgconfig \
    && ninja -C build \
    && ninja -C build install \
    && ldconfig \
    && rm -rf /root/src/edgeai-gst-plugins

WORKDIR /opt
RUN echo . \
    && git clone https://git.ti.com/git/edgeai/edge_ai_apps \
    && git clone https://git.ti.com/git/processor-sdk-vision/jacinto_ros_perception.git robotics_sdk \
    && cd /opt/robotics_sdk \
    && ./init_setup.sh \
    && ln -s /root/src/model_zoo /opt/model_zoo \
    && echo .

WORKDIR /root
RUN echo . \
    && echo "if [ -n \"$BASH_VERSION\" ]; then"     >  .profile \
    && echo "    # include .bashrc if it exists"    >> .profile \
    && echo "    if [ -f \"$HOME/.bashrc\" ]; then" >> .profile \
    && echo "        . \"$HOME/.bashrc\""           >> .profile \
    && echo "    fi"                                >> .profile \
    && echo "fi"                                    >> .profile \
    && echo "#!/bin/bash"                           >  .bashrc  \
    && echo ". /opt/ros/foxy/setup.bash"            >> .bashrc \
    && echo "export PS1=\"${debian_chroot:+($debian_chroot)}\u@j7-docker:\w\$ \"" >> .bashrc \
    && echo .

# workdir for ROS apps
ARG PROJECT_HOME=j7ros_home
ENV WORK_DIR=/root/${PROJECT_HOME}
ENV ROS_WS=${WORK_DIR}/ros_ws
WORKDIR ${ROS_WS}

# change the DDS implementation to Cyclone DDS
ENV RMW_IMPLEMENTATION rmw_cyclonedds_cpp

