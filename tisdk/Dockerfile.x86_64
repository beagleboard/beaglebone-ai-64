FROM ubuntu:20.04 AS ubuntu-tisdk1
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
RUN \
    apt update && apt upgrade -y \
    && apt install -y --no-install-recommends \
    wget \
    ca-certificates \
    && echo .
    #&& rm -rf /var/lib/apt/lists/*

WORKDIR /opt
RUN echo . \
    && wget https://software-dl.ti.com/jacinto7/esd/processor-sdk-rtos-jacinto7/08_01_00_11/exports/ti-processor-sdk-rtos-j721e-evm-08_01_00_11.tar.gz \
    && wget https://software-dl.ti.com/jacinto7/esd/processor-sdk-linux-jacinto7/08_01_00_07/exports/ti-processor-sdk-linux-j7-evm-08_01_00_07-Linux-x86-Install.bin \
    && echo .

RUN echo . \
    && chmod +x ./ti-processor-sdk-linux-j7-evm-08_01_00_07-Linux-x86-Install.bin \
    && ./ti-processor-sdk-linux-j7-evm-08_01_00_07-Linux-x86-Install.bin \
    && echo .

RUN echo . \
    && tar xzf ti-processor-sdk-rtos-j721e-evm-08_01_00_11.tar.gz \
    && echo .

RUN echo .\
    && apt install -y --no-install-recommends \
    xz-utils \
    && echo .

WORKDIR /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11
RUN echo . \
    && ln -s /opt/ti-processor-sdk-linux-j7-evm-08_01_00_07/board-support/prebuilt-images/boot-j7-evm.tar.gz \
    && ln -s /opt/ti-processor-sdk-linux-j7-evm-08_01_00_07/filesystem/tisdk-default-image-j7-evm.tar.xz \
    && echo .

WORKDIR /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11/psdk_rtos
RUN echo . \
    && ln -sf $PWD/j7_c_models/lib/PC/x86_64/LINUX/release/libDOF.so /usr/lib/x86_64-linux-gnu/libDOF.so \
    && ln -sf $PWD/j7_c_models/lib/PC/x86_64/LINUX/release/libglbce.so /usr/lib/x86_64-linux-gnu/libApicalSIM.so.1 \
    && dpkg --add-architecture i386 \
    && apt update && apt upgrade -y \
    && apt install -y --no-install-recommends \
    gcc-7 \
    g++-7 \
    libpng-dev \
    zlib1g-dev \
    libtiff-dev \
    libsdl2-dev \
    libsdl2-image-dev \
    graphviz \
    graphviz-dev \
    build-essential \
    libxmu-dev \
    libxi-dev \
    libgl-dev \
    libosmesa-dev \
    python3 \
    python3-pip \
    curl \
    libz1:i386 \
    libc6-dev-i386 \
    libc6:i386 \
    libstdc++6:i386 \
    g++-multilib \
    git \
    diffstat \
    texinfo \
    gawk \
    chrpath \
    libfreetype6-dev \
    mono-runtime \
    flex \
    libssl-dev \
    u-boot-tools \
    libdevil-dev \
    bison \
    python3-pyelftools \
    python3-dev \
    libx11-dev \
    && echo .

WORKDIR /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11
RUN echo . \
    && apt update && apt upgrade -y \
    && apt install -y --no-install-recommends \
    unzip \
    && echo .

WORKDIR /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11
RUN echo . \
    && /bin/bash ./psdk_rtos/scripts/setup_psdk_rtos.sh --skip_sudo \
    && echo .

WORKDIR /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11
RUN echo . \
    && cd glew-2.0.0 \
    && make install \
    && echo .

WORKDIR /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11
RUN echo . \
    && /bin/bash ./psdk_rtos/scripts/setup_psdk_rtos.sh --skip_sudo \
    && echo .

WORKDIR /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11
RUN echo . \
    && apt update && apt upgrade -y \
    && apt install -y --no-install-recommends \
    libncurses5 \
    && echo .

WORKDIR /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11
RUN echo . \
    && echo "BUILD_EMULATION=no" >> tiovx/build_flags.mak \
    && echo "BUILD_TARGET_MODE=yes" >> tiovx/build_flags.mak \
    && echo "BUILD_LINUX_A72=yes" >> tiovx/build_flags.mak \
    && echo "PROFILE=release" >> tiovx/build_flags.mak \
    && cd vision_apps \
    && make vision_apps -j2 \
    && echo .

FROM ubuntu-tisdk1 AS ubuntu-tiros-foxy
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=foxy

WORKDIR /opt
RUN git clone --single-branch --depth 1 --branch REL.08.01.00.03 git://git.ti.com/processor-sdk-vision/jacinto_ros_perception

RUN apt update && apt install -y curl gnupg2 lsb-release
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu focal main" > /etc/apt/sources.list.d/ros2.list
RUN apt update && apt install -y ros-foxy-ros-base ros-foxy-desktop

RUN echo . \
    && apt update && apt upgrade -y \
    && apt install -y --no-install-recommends \
    libgstreamer1.0-0 \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-good1.0-dev \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-libav \
    gstreamer1.0-tools \
    gir1.2-gst-rtsp-server-1.0 \
    ninja-build \
    python3-pip \
    libdevil-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev \
    wget \
    vim \
    tmux \
    gdb \
    iputils-ping \
    usbutils \
    ncurses-dev \
    libyaml-cpp-dev \
    rsync \
    strace \
    sysstat \
    gdb \
    net-tools \
    dialog \
    chrony \
    nfs-common \
    corkscrew \
    v4l-utils \
    ros-foxy-rmw-cyclonedds-cpp \
    ros-foxy-cv-bridge \
    ros-foxy-image-transport \
    ros-foxy-camera-info-manager \
    libeigen3-dev \
    python3-opencv \
    && python3 -m pip install --upgrade pip \
    && python3 -m pip install rosbags \
    && python3 -m pip install \
        meson \
        configparser \
        argparse \
    && echo .

RUN echo . \
    && apt update && apt upgrade -y \
    && apt install -y --no-install-recommends \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    && echo .
RUN rosdep init && \
    rosdep update --rosdistro foxy

WORKDIR /opt/jacinto_ros_perception/ros2
RUN git clone --branch ti-ros2 https://github.com/jadonk/gscam
RUN git clone https://github.com/ptrmu/ros2_shared.git

WORKDIR /opt/jacinto_ros_perception/ros2
RUN /bin/bash -c "source /opt/ros/foxy/setup.bash && \
    colcon build"

RUN echo . \
    && apt update && apt upgrade -y \
    && apt install -y --no-install-recommends \
    ros-foxy-rmw-cyclonedds-cpp \
    ros-foxy-cv-bridge \
    ros-foxy-image-transport \
    ros-foxy-camera-info-manager \
    ros-foxy-rviz2 \
    ros-foxy-image-view \
    ros-foxy-rqt-image-view \
    ros-foxy-rqt-console \
    ros-foxy-rqt-graph \
    libcanberra-gtk-module \
    libcanberra-gtk3-0 \
    libcanberra-gtk3-module \
    && echo .

RUN cp /opt/jacinto_ros_perception/docker/entrypoint_x86_64.sh /root/entrypoint.sh
RUN cp /opt/jacinto_ros_perception/docker/ros_setup.sh /root/

WORKDIR /root
RUN echo "if [ -n \"$BASH_VERSION\" ]; then"     >  .profile && \
    echo "    # include .bashrc if it exists"    >> .profile && \
    echo "    if [ -f \"$HOME/.bashrc\" ]; then" >> .profile && \
    echo "        . \"$HOME/.bashrc\""           >> .profile && \
    echo "    fi"                                >> .profile && \
    echo "fi"                                    >> .profile && \
    echo "#!/bin/bash"                           >  .bashrc  && \
    echo "export PS1=\"${debian_chroot:+($debian_chroot)}\u@pc-docker:\w\$ \"" >> .bashrc
RUN echo "#!/bin/sh" >  setup_proxy.sh \
    && echo "" >> setup_proxy.sh \
    && chmod +x setup_proxy.sh \
    && echo .

ARG PROJECT_HOME=j7ros_home
ENV WORK_DIR=/root/${PROJECT_HOME}
ENV ROS_WS=${WORK_DIR}/ros_ws
WORKDIR ${ROS_WS}

ENTRYPOINT ["/root/entrypoint.sh"]

# When this is done, clean-up should be done earlier to avoid image bloat
RUN rm /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11.tar.gz
RUN rm /opt/ti-processor-sdk-linux-j7-evm-08_01_00_07-Linux-x86-Install.bin

RUN echo . \
    && cd /opt/ti-processor-sdk-rtos-j721e-evm-08_01_00_11/vision_apps \
    && make linux_fs_stage \
    && cd /tmp/tivision_apps_targetfs_stage \
    && tar cJf /opt/tivision_apps.tar.xz . \
    && rm -rf /tmp/tivision_apps_targetfs_stage \
    && echo .

