# ubuntu-20.04-base
# Copyright (C) 2020-2021 Intel Corporation
#
# SPDX-License-Identifier: GPL-2.0-only
#

FROM ubuntu:20.04

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        gawk \
        wget \
        git-core \
        subversion \
        diffstat \
        unzip \
        sysstat \
        texinfo \
        build-essential \
        chrpath \
        socat \
        python \
        python3 \
        python3-pip \
        python3-pexpect \
        xz-utils  \
        locales \
        cpio \
        screen \
        tmux \
        sudo \
        iputils-ping \
        python3-git \
        python3-jinja2 \
        libegl1-mesa \
        libsdl1.2-dev \
        pylint3 \
        xterm \
        iproute2 \
        fluxbox \
        tightvncserver \
        lz4 \
        zstd && \
    cp -af /etc/skel/ /etc/vncskel/ && \
    echo "export DISPLAY=1" >>/etc/vncskel/.bashrc && \
    mkdir  /etc/vncskel/.vnc && \
    echo "" | vncpasswd -f > /etc/vncskel/.vnc/passwd && \
    chmod 0600 /etc/vncskel/.vnc/passwd && \
    useradd -U -m yoctouser && \
    /usr/sbin/locale-gen en_US.UTF-8 && \
    echo 'dash dash/sh boolean false' | debconf-set-selections && \
    DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash

COPY build-install-dumb-init.sh install-multilib.sh /
RUN  bash /build-install-dumb-init.sh && \
     rm /build-install-dumb-init.sh && \
     bash /install-multilib.sh && \
     rm /install-multilib.sh && \
     apt-get clean

USER yoctouser
WORKDIR /home/yoctouser
CMD /bin/bash

WORKDIR /opt
RUN echo . \
	&& wget https://developer.arm.com/-/media/Files/downloads/gnu-a/9.2-2019.12/binrel/gcc-arm-9.2-2019.12-x86_64-arm-none-linux-gnueabihf.tar.xz \
	&& tar xf gcc-arm-9.2-2019.12-x86_64-arm-none-linux-gnueabihf.tar.xz \
	&& rm gcc-arm-9.2-2019.12-x86_64-arm-none-linux-gnueabihf.tar.xz \
	&& wget https://developer.arm.com/-/media/Files/downloads/gnu-a/9.2-2019.12/binrel/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz \
	&& tar xf gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz \
	&& rm gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz \
RUN echo . \

ENV TOOLCHAIN_BASE_ARMV7=/opt/gcc-arm-9.2-2019.12-x86_64-arm-none-linux-gnueabihf
ENV TOOLCHAIN_BASE_ARMV8=/opt/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu
ENV MACHINE=j7-evm

ENV PSDK_VERSION=08_01_00_07
WORKDIR /home/yoctouser/yocto-build
RUN echo . \
	&& ./oe-layertool-setup.sh -f configs/processor-sdk-linux/processor-sdk-linux-08_01_00.txt \
	&& cd build \
	&& echo "INHERIT += \"own-mirrors\"" >> conf/local.conf \
	&& echo "SOURCE_MIRROR_URL = \"https://software-dl.ti.com/processor-sdk-mirror/sources/\"" >> conf/local.conf \
	&& echo "ARAGO_BRAND  = \"psdkla\"" >> conf/local.conf \
	&& echo "DISTRO_FEATURES_append = \" virtualization\"" >> conf/local.conf \
	&& . conf/setenv \
	&& echo .

	#&& TOOLCHAIN_BASE_ARMV7= TOOLCHAIN_BASE_ARMV8= MACHINE=j7-evm bitbake -k arago-core-psdkla-bundle \

